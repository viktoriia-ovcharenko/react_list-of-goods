{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","handleSortAlphabetically","setState","ALPHABET","handleSortByLength","LENGTH","handleReverse","handleReset","this","changedGoods","goods","visibleGoods","sort","g1","g2","length","localeCompare","reverse","getReorderedGoods","isGoodsChanged","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,yBAA2B,WACzB,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,UACpC,EARH,EAUEC,mBAAqB,WACnB,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,QACpC,EAZH,EAcEC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,WADF,GAGpB,EAlBH,EAoBEO,YAAc,WACZ,EAAKL,SAAS,CAAEJ,SAAUJ,EAASK,KAAMC,YAAY,GACtD,EAtBH,4CAwBE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,SAAUE,EAAlB,EAAkBA,WACZS,EAzDH,SACLC,EADK,GAGJ,IADCZ,EACF,EADEA,SAAUE,EACZ,EADYA,WAENW,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAIC,GACrB,OAAQhB,GACN,KAAKJ,EAASW,OACZ,OAAOQ,EAAGE,OAASD,EAAGC,OAExB,KAAKrB,EAASS,SACZ,OAAOU,EAAGG,cAAcF,GAE1B,QACE,OAAO,EAEZ,IAEGd,GACFW,EAAaM,UAGRN,CACR,CAiCwBO,CAAkBvB,EAAiBa,KAAKX,OACvDsB,EAAkBrB,IAAaJ,EAASK,MAASC,EAEvD,OACE,sBAAKoB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYxB,IAAaJ,EAASS,WAGtCoB,QAASf,KAAKP,yBARhB,iCAaA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYxB,IAAaJ,EAASW,SAGtCkB,QAASf,KAAKJ,mBARhB,4BAaA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,YAAatB,IAGjBuB,QAASf,KAAKF,cARhB,qBAaCa,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,YAHhB,sBAUJ,6BACE,6BACGE,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,EADJ,UAS/B,KA7FH,GAAyBC,aCzDzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.784c9e69.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((g1, g2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return g1.length - g2.length;\n\n      case SortType.ALPHABET:\n        return g1.localeCompare(g2);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  handleSortAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  handleSortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n    const changedGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isGoodsChanged = (sortType !== SortType.NONE) || isReversed;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              {\n                'is-light': sortType !== SortType.ALPHABET,\n              },\n            )}\n            onClick={this.handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              {\n                'is-light': sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              {\n                'is-light': !isReversed,\n              },\n            )}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {isGoodsChanged && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {changedGoods.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}